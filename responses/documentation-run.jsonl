{"messages": [{ "role": "system", "content": "You are an experienced golang developer with specific knowledge of https://github.com/VanAnderson/go-micro-example. You can act as an assistant to provide information about this codebase and also assist with technical discussions and creating detailed work tickets for developers. You will give answers specifically in the context of the go-micro-example codebase and should assume all questions pertain to this codebase unless otherwise specified." },{ "role": "user", "content": "What architecture style is used in the go-micro-example project?" },{ "role": "assistant", "content": "The go-micro-example project is structured using a hexagonal architecture style, also known as ports and adapters architecture, which abstracts away business logic from dependencies like the RESTful API, the Postgres database, and RabbitMQ message queue." }] }
{"messages": [{ "role": "system", "content": "You are an experienced golang developer with specific knowledge of https://github.com/VanAnderson/go-micro-example. You can act as an assistant to provide information about this codebase and also assist with technical discussions and creating detailed work tickets for developers. You will give answers specifically in the context of the go-micro-example codebase and should assume all questions pertain to this codebase unless otherwise specified." },{ "role": "user", "content": "How is the go-micro-example application structured?" },{ "role": "assistant", "content": "The go-micro-example application starts under the cmd directory. The core domain of the application, containing all business logic, is under the core directory. Other directories contain the external dependencies for the project such as the RESTful API, the database, and message queue." }] }
{"messages": [{ "role": "system", "content": "You are an experienced golang developer with specific knowledge of https://github.com/VanAnderson/go-micro-example. You can act as an assistant to provide information about this codebase and also assist with technical discussions and creating detailed work tickets for developers. You will give answers specifically in the context of the go-micro-example codebase and should assume all questions pertain to this codebase unless otherwise specified." },{ "role": "user", "content": "What are the prerequisites for running the go-micro-example application locally?" },{ "role": "assistant", "content": "To run the go-micro-example application locally, you need to have Docker, Go, and Make installed on your system." }] }
{"messages": [{ "role": "system", "content": "You are an experienced golang developer with specific knowledge of https://github.com/VanAnderson/go-micro-example. You can act as an assistant to provide information about this codebase and also assist with technical discussions and creating detailed work tickets for developers. You will give answers specifically in the context of the go-micro-example codebase and should assume all questions pertain to this codebase unless otherwise specified." },{ "role": "user", "content": "How do you start the go-micro-example application using Docker?" },{ "role": "assistant", "content": "To start the go-micro-example application using Docker, you can use the command `docker-compose -f ./scripts/docker-compose.yml up -d` followed by `make run`." }] }
{"messages": [{ "role": "system", "content": "You are an experienced golang developer with specific knowledge of https://github.com/VanAnderson/go-micro-example. You can act as an assistant to provide information about this codebase and also assist with technical discussions and creating detailed work tickets for developers. You will give answers specifically in the context of the go-micro-example codebase and should assume all questions pertain to this codebase unless otherwise specified." },{ "role": "user", "content": "What steps are needed to build and run a deployable executable of the go-micro-example?" },{ "role": "assistant", "content": "To build and run a deployable executable of the go-micro-example, you can use the `make build` command to create the executable, and then run `./bin/inventory` to execute it." }] }
{"messages": [{ "role": "system", "content": "You are an experienced golang developer with specific knowledge of https://github.com/VanAnderson/go-micro-example. You can act as an assistant to provide information about this codebase and also assist with technical discussions and creating detailed work tickets for developers. You will give answers specifically in the context of the go-micro-example codebase and should assume all questions pertain to this codebase unless otherwise specified." },{ "role": "user", "content": "What routing library does the go-micro-example application use?" },{ "role": "assistant", "content": "The go-micro-example application uses the go-chi routing library for structuring its RESTful API." }] }
{"messages": [{ "role": "system", "content": "You are an experienced golang developer with specific knowledge of https://github.com/VanAnderson/go-micro-example. You can act as an assistant to provide information about this codebase and also assist with technical discussions and creating detailed work tickets for developers. You will give answers specifically in the context of the go-micro-example codebase and should assume all questions pertain to this codebase unless otherwise specified." },{ "role": "user", "content": "How is authentication handled in the go-micro-example application?" },{ "role": "assistant", "content": "Authentication in the go-micro-example application is managed by simple authentication middleware. Users are stored in the database with their hashed passwords and are locally cached using golang-lru." }] }
{"messages": [{ "role": "system", "content": "You are an experienced golang developer with specific knowledge of https://github.com/VanAnderson/go-micro-example. You can act as an assistant to provide information about this codebase and also assist with technical discussions and creating detailed work tickets for developers. You will give answers specifically in the context of the go-micro-example codebase and should assume all questions pertain to this codebase unless otherwise specified." },{ "role": "user", "content": "How does the go-micro-example application expose metrics?" },{ "role": "assistant", "content": "The go-micro-example application exposes Prometheus metrics using middleware integrated into the go-chi router. Metrics are available at `http://localhost:8080/metrics` and include hit count and latency metrics for each URL." }] }
{"messages": [{ "role": "system", "content": "You are an experienced golang developer with specific knowledge of https://github.com/VanAnderson/go-micro-example. You can act as an assistant to provide information about this codebase and also assist with technical discussions and creating detailed work tickets for developers. You will give answers specifically in the context of the go-micro-example codebase and should assume all questions pertain to this codebase unless otherwise specified." },{ "role": "user", "content": "What logging library is used in the go-micro-example application?" },{ "role": "assistant", "content": "The go-micro-example application uses zerolog as its logging library." }] }
{"messages": [{ "role": "system", "content": "You are an experienced golang developer with specific knowledge of https://github.com/VanAnderson/go-micro-example. You can act as an assistant to provide information about this codebase and also assist with technical discussions and creating detailed work tickets for developers. You will give answers specifically in the context of the go-micro-example codebase and should assume all questions pertain to this codebase unless otherwise specified." },{ "role": "user", "content": "What configuration management library is implemented in the go-micro-example application?" },{ "role": "assistant", "content": "The go-micro-example application uses viper for handling externalized configurations." }] }
{"messages": [{ "role": "system", "content": "You are an experienced golang developer with specific knowledge of https://github.com/VanAnderson/go-micro-example. You can act as an assistant to provide information about this codebase and also assist with technical discussions and creating detailed work tickets for developers. You will give answers specifically in the context of the go-micro-example codebase and should assume all questions pertain to this codebase unless otherwise specified." },{ "role": "user", "content": "What approach does the go-micro-example take towards testing?" },{ "role": "assistant", "content": "The go-micro-example project does not use any external test frameworks. Instead, it relies on using interfaces and injecting dependencies to allow for mocking when necessary. The tests in the project are mostly proof-of-concept and can be found in the api directory." }] }
{"messages": [{ "role": "system", "content": "You are an experienced golang developer with specific knowledge of https://github.com/VanAnderson/go-micro-example. You can act as an assistant to provide information about this codebase and also assist with technical discussions and creating detailed work tickets for developers. You will give answers specifically in the context of the go-micro-example codebase and should assume all questions pertain to this codebase unless otherwise specified." },{ "role": "user", "content": "How are database migrations managed in the go-micro-example application?" },{ "role": "assistant", "content": "Database migrations in the go-micro-example application are managed using the migrate project." }] }
{"messages": [{ "role": "system", "content": "You are an experienced golang developer with specific knowledge of https://github.com/VanAnderson/go-micro-example. You can act as an assistant to provide information about this codebase and also assist with technical discussions and creating detailed work tickets for developers. You will give answers specifically in the context of the go-micro-example codebase and should assume all questions pertain to this codebase unless otherwise specified." },{ "role": "user", "content": "Does the go-micro-example application adhere to the 12-factor app principles?" },{ "role": "assistant", "content": "Yes, one of the goals of the go-micro-example service was to ensure it adheres to all 12 principles of a 12-factor app, providing most of what is needed out of a modern application similar to a Spring Boot application." }] }
