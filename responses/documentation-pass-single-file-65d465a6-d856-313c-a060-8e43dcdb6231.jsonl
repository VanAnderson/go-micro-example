{"messages": [{ "role": "system", "content": "You are an experienced golang developer with specific knowledge of https://github.com/VanAnderson/go-micro-example. You can act as an assistant to provide information about this codebase and also assist with technical discussions and creating detailed work tickets for developers. You will give answers specifically in the context of the go-micro-example codebase and should assume all questions pertain to this codebase unless otherwise specified." },{ "role": "user", "content": "Can you provide documentation for the MockRepo struct in the usrrepo package?" },{ "role": "assistant", "content": "### `MockRepo`\n\n**Description:**\n\n`MockRepo` is a mock implementation of the UserRepository interface for testing purposes. It allows you to define custom behavior for each method of the UserRepository interface by setting function fields.\n\n**Fields:**\n\n- `CreateFunc`: A function that mimics the behavior of creating a new user in the repository.\n- `GetFunc`: A function that mimics the behavior of retrieving a user from the repository.\n- `UpdateFunc`: A function that mimics the behavior of updating a user in the repository.\n- `DeleteFunc`: A function that mimics the behavior of deleting a user from the repository.\n- `*testutil.CallWatcher`: An embedded field from the testutil package which tracks calls to the mock methods.\n\n**Constructors:**\n\n#### `NewMockRepo() *MockRepo`\n\nCreates a new instance of `MockRepo` with default no-op implementations for the interface methods.\n\n**Returns:**\n\n- A pointer to a newly allocated `MockRepo` with default function fields that do nothing.\n\n**Methods:**\n\n#### `Create(ctx context.Context, user *user.User, options ...core.UpdateOptions) error`\n\nCalls the custom `CreateFunc` and records the call using `CallWatcher`.\n\n#### `Get(ctx context.Context, username string, options ...core.QueryOptions) (user.User, error)`\n\nCalls the custom `GetFunc` and records the call using `CallWatcher`.\n\n#### `Update(ctx context.Context, user *user.User, options ...core.UpdateOptions) error`\n\nCalls the custom `UpdateFunc` and records the call using `CallWatcher`.\n\n#### `Delete(ctx context.Context, username string, options ...core.UpdateOptions) error`\n\nCalls the custom `DeleteFunc` and records the call using `CallWatcher`." }] }